1. 众多的开源和非开源的项目


2.


3.


为会么要使用git
    本地建立版本库
    本地版本控制
    多主机异地协同工作
    重写提交说明
    有后悔药可以吃
    更好用的的提交列表
    更好的差异比较
    更完善的分支系统
    速度极快


版本库的初始化
    个人计算机从版本服务器同步

操作
    90%以上的操作在个人计算机上
    添加文件
    修改文件
    提交变更
    查看版本历史等
版本库同步
    将本地修改推送到版本服务器


直接记录快照，而非差异比较
近乎所有的操作都是在本地执行
时刻保持数据的完整性
多数操作仅添加数据
文件三种状态
    已修改（modified）
    已暂存 (staged)
    已提交 (committed)


Git文件
    已经被版本库管理的文件

已经修改
    在工作目录修改的Git文件


已暂存
    对已经修改的文件执行Git暂存操作，将文件存入暂存区

已提交
    将已经暂存文件执行Git提交操作，将文件存入版本库(是自己本机的版本库)

git rm 删除文件操作
    1.删除一个文件
    2.将被删除的文件纳入到暂存区（stage,index）
若想恢复被删除的文件，需要进行两个操作：
    git reset HEAD test2.txt        将待删除的文件从暂存区恢复到工作区
    git checkout -- test2.txt       将工作区中的修改丢弃掉

将test2.txt删除，这时，被删除的文件并没有添加到暂存区中，
如果要放入到暂存区中，我们要用git add 命令

git mv 命令 将当前这个目录移动到另一个目录
git mv test.txt text2.txt
git reset HEAD test2.txt
git checkout -- test2.txt



git add . 将当前目录的所有的文件纳入到暂存区中
git log
    -p :展示显示最近n次更新
    -n :仅显示每次提交的内容差异
    --stat: 仅显示知道要的增改行数据统计
    --pretty=online
    --pretty=format:"%h-%an,%ar:%s"

git help config
man git config








